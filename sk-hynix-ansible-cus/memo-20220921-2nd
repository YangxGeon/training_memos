https://rol.redhat.com

ID/PW으로 로그인 




1. include_: ansible_playbook에서 해당 문법을 만나기 전까지는 메모리에 올리지 않음(파싱x)
2. import_: ansible_playbook에서 해당 문법을 만나면 메모리에 미리 적재 및 컴파일 수행 


https://github.com/tangt64/training_memos
-->/skt-ansible-beginner


--> WorkStation VM
student/student(default)

$ sudo yum install gnome-tweaks -y
student
$ gnome-tweaks 
$ sudo -i
student
# yum search ansible
# yum repolist 
# yum info ansible

$ ansible -m setup       localhost
    ---- [LOOPBACK DEV] ----> 
    * loopback 같은 경우, 같은 사용자(remote_user)경우 암호묻지 않음.


setup: 다른말로 facts라고 부르기도 함.
------
\
 '---> 모든 호스트에서 정보를 수집


bsd vs linux kernel scheduler performance

google keyword: compare bsd vs linux scheduler
-> The Battle of the Schedulers: FreeBSD ULE vs ... - USENIX


## 앤서블 인벤토리


$ vi inventory -- vi hosts

[ungrouped]        ;; 그룹에 포함이 되지 않는것들
[all]             ;; 그룹에 상관없이 모든 서버
[<이름>:children]  ;; 그룹상속(부모 자식 관계)
=======================================
ansible_keyword command

[그룹이름]
<호스트 아이피>
<호스트 FQDN>
<호스트 이름>

->$ ansible all,
->$ ansible database
->$ ansible nodea.lab.example.com

   ---------------------- 변수 작업 ------------------------->
|  [database]
|  10.10.10.2 ansible_*: keyword 변수 ipaddress=110.45.22.32
|  10.10.10.[50:100] ansible_user=remote_test
인
벤
토
리
작  node[a:z].lab.example.com
업
|  [webserver]
|  10.20.20.2
|  10.20.20.[50:100]
|  node[a:z].web.example.com 
v
  [seoul]
  110.45.23.20
  [busan]
  110.45.23.21
  [gwangju]
  110.45.23.22


  [korea:children]
  seoul
  busan
  gwangju

### service
status:
  started: 서비스 시작 상태
  stopped: 서비스 중지 상태



### playbook

주의사항은 아지만 표준권장은 다음과 같음(YAML, Not Ansible)



OpenStack heat(yaml)
--- (생략을 매우 자주함)

$ mkdir -p vars_files
$ cat <<EOF> vars_files/default
user: joe
home: /home/joe
EOF

$ touch ansible.cfg
$ cat <<EOF> ansible.cfg
[defaults]
inventory = hosts
become_true = yes
remote_user = devops
EOF

$ ansible-playbook helloworld.yaml 
- name: Hello This is the first playbook
  hosts: webservers
          <필수, inventory에 영향>
         <최소 localhost라도 명시>

  become_true: yes     ## 혹은 ansible.cfg에 선언이 가능
  remote_user: devops

  vars:
    home: gangnam
    owner: tang

  vars_files:
    - vars_files/default

  tasks:
    - name: this is the first module
      debug:         ## 디버깅 용도(변수 혹은 레지스터(register))
        msg: "Hello This is the first module"

    - name: where is the home?
      debug:
        msg: "{{ home }}"
   
    - name who is the owner?
      debug:
        msg: "{{ owner }}"


2칸

... (생략 자주함)



## 변수 사용법


https://ansible.sivel.net/test/


1. 변수는 j2를 통해서 파싱 및 호출이 된다.
   -> find to replace 
   -> "{{ <변수이름> }}"
      * 문자열(string)과 같이 사용할때 조금은 다르게 동작함.
      * - name: this task will run on the {{ inventory_hostname }}
   -> "item"이라는 변수명은 사용금지!! 
   -> 리스트 및 딕셔너리 두 가지 둘다 지원
   
   for i in {1..30}


2. 인벤토리 변수

   -> 인벤토리 파일 안에 변수를 선언 
      * 특정 기능에 대한 값 설정(앤서블 + 사용자화)
$ cat <<EOF> ansible.cfg
[defaults]
inventory = hosts
remote_user = skt_user

$ cat <<EOF> hosts
[waserver]
jboss1.example.com nodename=jboss.mid.fab.com ansible_user=hynix_user

;;
;; FQDN으로 A레코드가 IP하고 매칭이 되어 있음
;; localhost.localhostdomain 
;;

[dbserver]
db1.example.com nodename=mysql.db.fab.com ansible_user=hynix_user ansible_password=secure


$ cat <<EOF> hostname.yaml
---
- name: set to hostname
  hosts: all

  tasks:
  - name: set the hostname
    hostname: "{{ nodename }}"

EOF

$ ansible-playbook hostname.yaml
$ ansible-playbook hostname.yaml -e ansible_user=hynix -e ansible_password=hynix


## group_vars, host_vars


group_vars: 인벤토리 그룹에게 변수 제공 역할
host_vars: 인벤토리에 등록된 호스트에 변수 제공

$ cat <<EOF> inventory
[webserver]
web1.example.com
web2.example.com

[dbserver]
db1.example.com
db[2:5].example.com
EOF
$ mkdir -p group_vars/dbserver
$ cd group_vars/dbserver
$ cat <<EOF> nodename
nodename: db.server.com
EOF
                    
$ mkdir -p group_vars/webserver

$ cd group_vars/webserver
$ cat <<EOF> nodename       ;; 이름은 여러분이 원하시는 분류 이름으로 정하시면 됨.
nodename: web.server.com

$ cat <<EOF> hostname.yaml
- hosts: all
  tasks:
  - hostname: "{{ nodename }}"

$ ansible-playbook hostname.yaml




inventory variable                             |         group_vars
                                               |
                                                 - 인벤토리의 그룹 영향을 줌
   선언된 녀석만 적용                                [webserver]
    .-------.                                    10.10.0.2    
   /         \                                   20.23.14.2
10.10.1.4 nodename=test.example.com              mkdir -p group_vars/web_server
10.22.4.5                                        프레임워크 변수 디렉토리/파일
lab.example.com                                  cat <<EOF> web_server
지역적으로 적용이 됨                                 node_name: test.example.com
                                                 특정 그룹에 대한 전역변수 역할


ansible.cfg
-------------
[defaults]
remote_root= root

become_user: 
become_method: sudo 

visudo 
-> wheel, NOPASSWD:

accessuser.yaml
-

ansible-playbook test.yaml


controller  MIG: Step1
------------
root -> user

ansible.cfg
remote_user= root


MIG: Step
sudoers: NOPASSWD + WHEEL 설정
/etc/sudoers.d/ansible_user.conf

- hosts: all
  gather_facts: false
  vars:
    ansible_user: root
    ansible_password: root
    remote_user: remote_ansible
    remote_user_password: remote_ansible_passwd

  tasks:
  user: 
    name: "{{ remote_user }}"
    state: present
    password: "{{ remote_user_password }}"
    group: wheel
    append: yes
        
  sudoers:
    name: ansible_user_no_password
    state: present
    user: "{{ remote_user }}"
    group: wheel 
    nopassword: yes

  - authorized_key:
      user: "{{ remote_user }}"
      key: "{{ lookup('file', '/home/' + lookup('env', 'USER') + '/.ssh/id_rsa.pub') }}"
